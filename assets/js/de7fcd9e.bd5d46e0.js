"use strict";(self.webpackChunkmesodocs=self.webpackChunkmesodocs||[]).push([[8376],{4137:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>h});var n=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var o=n.createContext({}),u=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(o.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=u(r),m=i,h=d["".concat(o,".").concat(m)]||d[m]||c[m]||a;return r?n.createElement(h,s(s({ref:t},p),{},{components:r})):n.createElement(h,s({ref:t},p))}));function h(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,s=new Array(a);s[0]=m;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[d]="string"==typeof e?e:i,s[1]=l;for(var u=2;u<a;u++)s[u]=r[u];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8706:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>u});var n=r(7462),i=(r(7294),r(4137));const a={title:"Chdb",sidebar_position:1},s=void 0,l={unversionedId:"arch_exp/turpan/logiciels/chdb",id:"arch_exp/turpan/logiciels/chdb",title:"Chdb",description:"Chdb est con\xe7u pour ex\xe9cuter en parall\xe8le le m\xeame programme sur un grand nombre d\u2019entr\xe9es ind\xe9pendantes. Il s\u2019adresse aux calculs dits \xab embarrassingly parallel \xbb, qui ne n\xe9cessitent aucune communication entre processus et ne font donc pas appel \xe0 MPI.",source:"@site/docs/arch_exp/turpan/logiciels/chdb.md",sourceDirName:"arch_exp/turpan/logiciels",slug:"/arch_exp/turpan/logiciels/chdb",permalink:"/documentation/user-documentation/arch_exp/turpan/logiciels/chdb",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Chdb",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"BLAS",permalink:"/documentation/user-documentation/arch_exp/turpan/logiciels/blas"},next:{title:"LAPACK",permalink:"/documentation/user-documentation/arch_exp/turpan/logiciels/lapack"}},o={},u=[{value:"Les pr\xe9requis",id:"les-pr\xe9requis",level:2},{value:"Les pr\xe9cautions \xe0 pendre",id:"les-pr\xe9cautions-\xe0-pendre",level:2},{value:"Initialiser l\u2019environnement",id:"initialiser-lenvironnement",level:2},{value:"La commande chdb",id:"la-commande-chdb",level:2},{value:"On <strong>doit passer</strong> les param\xe8tres suivants :",id:"on-doit-passer-les-param\xe8tres-suivants-",level:4},{value:"On peut passer en outre les param\xe8tres suivants :",id:"on-peut-passer-en-outre-les-param\xe8tres-suivants-",level:4},{value:"En cas d\u2019erreur dans la commande ex\xe9cut\xe9e :",id:"en-cas-derreur-dans-la-commande-ex\xe9cut\xe9e-",level:4},{value:"Chdb dans un script slurm",id:"chdb-dans-un-script-slurm",level:3}],p={toc:u},d="wrapper";function c(e){let{components:t,...r}=e;return(0,i.kt)(d,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Chdb est con\xe7u pour ex\xe9cuter en parall\xe8le le m\xeame programme sur un grand nombre d\u2019entr\xe9es ind\xe9pendantes. Il s\u2019adresse aux calculs dits \xab embarrassingly parallel \xbb, qui ne n\xe9cessitent aucune communication entre processus et ne font donc pas appel \xe0 MPI."),(0,i.kt)("h2",{id:"les-pr\xe9requis"},"Les pr\xe9requis"),(0,i.kt)("p",null,"Il s\u2019applique aux calculs ayant les caract\xe9ristiques suivantes :"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Un ex\xe9cutable s\xe9quentiel ou multithread\xe9 est appliqu\xe9 de mani\xe8re r\xe9p\xe9titive sur un ensemble de fichiers d\u2019entr\xe9e"),(0,i.kt)("li",{parentName:"ul"},"Les noms des fichiers d\u2019entr\xe9e se terminent tous par la m\xeame extension"),(0,i.kt)("li",{parentName:"ul"},"Il n\u2019y a pas de d\xe9pendance entre les diff\xe9rents traitements"),(0,i.kt)("li",{parentName:"ul"},"Il n\u2019y a donc pas de communication entre eux"),(0,i.kt)("li",{parentName:"ul"},"Il est possible de lancer plusieurs instances de l\u2019ex\xe9cutable simultan\xe9ment.")),(0,i.kt)("h2",{id:"les-pr\xe9cautions-\xe0-pendre"},"Les pr\xe9cautions \xe0 pendre"),(0,i.kt)("admonition",{title:"Important",type:"danger"},(0,i.kt)("p",{parentName:"admonition"},"chdb est un outil tr\xe8s puissant : s\u2019il y a une erreur dans votre ex\xe9cutable produisant des effets n\xe9fastes pour le syst\xe8me, en particulier des entr\xe9es-sorties intensives, ceux-ci seront d\xe9multipli\xe9s. La r\xe8gle d\u2019or est donc la suivante :"),(0,i.kt)("p",{parentName:"admonition"},'AVANT DE LANCER UN EX\xc9CUTABLE AVEC chdb, V\xc9RIFIEZ QUE CELUI-CI FONCTIONNE CORRECTEMENT EN LE LAN\xc7ANT en "STANDALONE". Si le comportement de votre ex\xe9cutable est correct, alors seulement vous pouvez envisager de l\u2019utiliser avec chdb.')),(0,i.kt)("h2",{id:"initialiser-lenvironnement"},"Initialiser l\u2019environnement"),(0,i.kt)("p",null,"L\u2019environnement doit \xeatre initialis\xe9 :"),(0,i.kt)("blockquote",null,(0,i.kt)("pre",{parentName:"blockquote"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"module load chdb/1.1 \n"))),(0,i.kt)("h2",{id:"la-commande-chdb"},"La commande chdb"),(0,i.kt)("p",null,"chdb permet d\u2019ex\xe9cuter un programme pr\xe9sentant les caract\xe9ristiques ci-dessus sur un nombre arbitraire de processeurs et de n\u0153uds."),(0,i.kt)("p",null,"Lire la documentation ",(0,i.kt)("inlineCode",{parentName:"p"},"chdb --help")),(0,i.kt)("h4",{id:"on-doit-passer-les-param\xe8tres-suivants-"},"On ",(0,i.kt)("strong",{parentName:"h4"},"doit passer")," les param\xe8tres suivants :"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--in-dir")," Le nom du r\xe9pertoire dans lequel se trouvent les fichiers d\u2019entr\xe9e. Ce r\xe9pertoire doit exister"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--in-type")," L\u2019extension des fichiers que l\u2019on consid\xe8re comme fichiers d\u2019entr\xe9e. Par exemple txt, pdb, etc."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--out-files"),' Le nom du ou des fichiers cr\xe9\xe9s par la commande, pour chaque ex\xe9cution de la commande le nom est bien s\xfbr diff\xe9rent, on utilise des "templates" qui seront remplac\xe9s avec le nom du fichier d\u2019entr\xe9e. S\u2019il y a plusieurs fichiers cr\xe9\xe9s, leurs noms doivent \xeatre s\xe9par\xe9s par des virgules (,)'),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--command-line")," La ligne de commande utilis\xe9e. Il est possible de mettre un morceau de shell complet (une s\xe9rie de commandes s\xe9par\xe9e par des | par exemple). La seule restriction est que cette commande doit lire un fichier en entr\xe9e, \xe9crire un ou plusieurs fichiers en sortie. La commande doit \xeatre mise entre guillemets, sinon elle sera interpr\xe9t\xe9e par le shell"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--out-dir")," Le nom du r\xe9pertoire contenant les fichiers de sortie. Ce r\xe9pertoire ne doit pas exister au d\xe9marrage de chdb")),(0,i.kt)("h4",{id:"on-peut-passer-en-outre-les-param\xe8tres-suivants-"},"On peut passer en outre les param\xe8tres suivants :"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--work-dir"),' Avant d\u2019ex\xe9cuter la commande, chdb fera un chdir dans ce r\xe9pertoire. Ce r\xe9pertoire est souvent le m\xeame que --outdir, et les m\xeames "templates" peuvent \xeatre utilis\xe9s.'),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--create-environment"),' Vous pouvez entrer ici un "petit morceau" de code shell, qui sera ex\xe9cut\xe9 apr\xe8s le chdir pr\xe9c\xe9dent et avant l\u2019appel de la commande : cela vous permet par exemple de copier des fichiers d\u2019entr\xe9e qui seraient obligatoirement pr\xe9sents dans le r\xe9pertoire courant.'),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--sort-by-size")," Les fichiers pr\xe9sent\xe9s en entr\xe9e sont tri\xe9s du plus gros au plus petit, si l\u2019on fait l\u2019hypoth\xe8se que le temps de traitement est proportionnel \xe0 la charge cela devrait permettre un meilleur \xe9quilibrage de la charge"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--block-size=10")," Si on met 10 par exemple, cela signifie que les process mpi traitent les fichiers par blocs de 10. Cela permet de minimiser les communications lorsque le nombre de fichiers est important. S\u2019il y a peu de fichiers, cette option risque par contre de g\xe9n\xe9rer un d\xe9s\xe9quilibrage de la charge."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"--in-files")," Permet de ne traiter qu\u2019une partie des fichiers du r\xe9pertoire d\u2019entr\xe9e")),(0,i.kt)("h4",{id:"en-cas-derreur-dans-la-commande-ex\xe9cut\xe9e-"},"En cas d\u2019erreur dans la commande ex\xe9cut\xe9e :"),(0,i.kt)("p",null,"Si la commande ex\xe9cut\xe9e renvoie un code d\u2019erreur (c\u2019est-\xe0 -dire un statut diff\xe9rent de z\xe9ro), le comportement par d\xe9faut de chdb est d\u2019arr\xeater tout traitement."),(0,i.kt)("p",null,"On peut toutefois modifier ce comportement en sp\xe9cifiant le param\xe8tre ",(0,i.kt)("inlineCode",{parentName:"p"},"--on-error")," : le nom des fichiers ayant provoqu\xe9 une erreur est conserv\xe9, cela permet de relancer chdb (avec des param\xe8tres diff\xe9rents)."),(0,i.kt)("p",null,"Pour cela, le param\xe8tre ",(0,i.kt)("inlineCode",{parentName:"p"},"--in-files")," sera utile car il permettra de ne relancer le programme que sur les fichiers d\u2019entr\xe9e qui ont provoqu\xe9 l\u2019erreur."),(0,i.kt)("h3",{id:"chdb-dans-un-script-slurm"},"Chdb dans un script slurm"),(0,i.kt)("p",null,"Dans cet exemple simple, un script Bash g\xe9n\xe8re les fichiers d\u2019entr\xe9e et le programme qui ex\xe9cute le traitement correspondant \xe0 chaque entr\xe9e."),(0,i.kt)("blockquote",null,(0,i.kt)("pre",{parentName:"blockquote"},(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'#create directories\nmkdir -p ./chdb_test/input\nmkdir -p ./chdb_test/dev_output   \ncd ./chdb_test\n#create 20 small input files\nfor i in $(seq -f "%02g" 1 20); do\n printf "This is file %s\\n" "$i" > input/file_${i}.txt\ndone\n# create a simple processing program (mon_programme)\n# This program reads stdin (or a filename arg) and writes an output file.\ncat > mon_programme.sh <<\'EOF\'\n#!/bin/bash\n# mon_programme.sh infile > outfile\ninfile="$1"\n# simulate some work: sleep 0-2 seconds, print file contents with header\nsleep $((RANDOM % 3))\necho "=== processed: $(basename "$infile") ==="\ncat "$infile"\nEOF\nchmod +x mon_programme.sh\n#test one run "standalone" (MANDATORY before using chdb)\n./mon_programme.sh input/file_01.txt > dev_output/file_01.out\ncat dev_output/file_01.out\n'))),(0,i.kt)("p",null,"Ce script Slurm permet de lancer le code sur tous les fichiers d\u2019entr\xe9e."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'#!/bin/bash\n#SBATCH -J chdb_example\n#SBATCH -N 1\n#SBATCH -n 3\n#SBATCH --ntasks-per-node=3\n#SBATCH --ntasks-per-core=1\n#SBATCH --time=00:30:00\n#SBATCH --output=chdb.out\n\nmodule purge\nmodule load chdb/1.1\n\n\n# IMPORTANT: ensure out directory does NOT exist\nrm -rf out_slurm\nmpirun chdb \\\n  --in-dir ./chdb_test/input \\\n  --in-type txt \\\n  --out-dir ./chdb_test/out_slurm \\\n  --out-files %out-dir%/%path% \\\n  --sort-by-size \\\n  --command "./mon_program.sh %in-dir%/%path% > %out-dir%/%path%"\n')),(0,i.kt)("p",null,"Les variables ",(0,i.kt)("inlineCode",{parentName:"p"},"%in-dir%/%path%")," et ",(0,i.kt)("inlineCode",{parentName:"p"},"%out-dir%/%path%")," correspondent aux chemins d\u2019entr\xe9e et de sortie d\xe9finis pr\xe9c\xe9demment dans la commande par (",(0,i.kt)("inlineCode",{parentName:"p"},"--out-dir"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"--in-dir"),") ; elles seront d\xe9tect\xe9es automatiquement."))}c.isMDXComponent=!0}}]);