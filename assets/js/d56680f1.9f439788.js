"use strict";(self.webpackChunkmesodocs=self.webpackChunkmesodocs||[]).push([[8817],{4137:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>k});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),u=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(a),d=n,k=p["".concat(s,".").concat(d)]||p[d]||m[d]||o;return a?r.createElement(k,l(l({ref:t},c),{},{components:a})):r.createElement(k,l({ref:t},c))}));function k(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[p]="string"==typeof e?e:n,l[1]=i;for(var u=2;u<o;u++)l[u]=a[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,a)}d.displayName="MDXCreateElement"},6874:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>m,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var r=a(7462),n=(a(7294),a(4137));const o={title:"Description",sidebar_position:1},l="Boreale, la machine vectorielle de MesoNET",i={unversionedId:"arch_exp/boreal/description",id:"arch_exp/boreal/description",title:"Description",description:"Pour toute demande d'assistance concernant Bor\xe9ale, merci d'envoyer un mail \xe0 cette adresse..",source:"@site/docs/arch_exp/boreal/description.md",sourceDirName:"arch_exp/boreal",slug:"/arch_exp/boreal/description",permalink:"/documentation/user-documentation/arch_exp/boreal/description",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Description",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Architectures de Prototypage et Sp\xe9cialis\xe9es",permalink:"/documentation/user-documentation/category/architectures-de-prototypage-et-sp\xe9cialis\xe9es"},next:{title:"Se connecter \xe0 Bor\xe9ale",permalink:"/documentation/user-documentation/arch_exp/boreal/connexion"}},s={},u=[{value:"Architecture globale",id:"architecture-globale",level:2},{value:"Architecture mat\xe9rielle",id:"architecture-mat\xe9rielle",level:2}],c={toc:u},p="wrapper";function m(e){let{components:t,...a}=e;return(0,n.kt)(p,(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"boreale-la-machine-vectorielle-de-mesonet"},"Boreale, la machine vectorielle de MesoNET"),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"Pour toute demande d'assistance concernant Bor\xe9ale, merci d'envoyer un mail ",(0,n.kt)("a",{parentName:"p",href:"mailto:support-boreale@criann.fr"},"\xe0 cette adresse."),".")),(0,n.kt)("h2",{id:"architecture-globale"},"Architecture globale"),(0,n.kt)("p",null,"Cette machine cible des applications vectoris\xe9es et id\xe9alement de profil li\xe9 \xe0 la m\xe9moire, puisque la bande passante m\xe9moire d'une carte NEC SX-Aurora TSUBASA 20B (ou ",(0,n.kt)("inlineCode",{parentName:"p"},"VE"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"Vector Engine"),") a une valeur \xe9lev\xe9e de 1,53 TB/s, alors que sa puissance cr\xeate en double pr\xe9cision a une valeur de 2,45 TFlop/s, mod\xe9r\xe9e relativement \xe0 d'autres types d'acc\xe9l\xe9rateurs. Toutefois \xe0 titre de comparaison, la puissance CPU d'un n\u0153ud de calcul de Bor\xe9ale (ou ",(0,n.kt)("inlineCode",{parentName:"p"},"VH"),", ",(0,n.kt)("inlineCode",{parentName:"p"},"Vector Host"),"), h\xf4te de 8 VE 20B, est de 2,97 TFlop/s."),(0,n.kt)("p",null,"Un VE poss\xe9dant 8 c\u0153urs, une parall\xe9lisation d'application par OpenMP et/ou MPI est n\xe9cessaire pour un usage complet de ce processeur. Chacun de ces c\u0153urs poss\xe8de 64 vecteurs longs (registres), chacun d'une taille de 256 \xe9l\xe9ments de double pr\xe9cision (16384 bits). La vectorisation des boucles internes de code est alors cruciale."),(0,n.kt)("p",null,"Trois modes d'utilisation de cette machine sont possibles :"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Usage des VE en mode natif ou offloading automatique",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"La programmation ne s'appuie que sur les langages standard (FORTRAN, C, C++), OpenMP et/ou MPI. L'application est compil\xe9e par le compilateur de NEC et le syst\xe8me d\xe9porte automatiquement et totalement l'ex\xe9cution sur VE"))),(0,n.kt)("li",{parentName:"ul"},"Usage des VE et VH en mode hybride",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Si des parties d'algorithme ou des appels \xe0 entr\xe9es-sorties ne sont pas vectorisables, le mode natif risque de ne pas \xeatre efficace en performance. L'environnement de programmation de NEC permet une programmation hybride pour CPU et VE avec plusieurs API : programme principal sur VE et d\xe9port de noyaux sur VH (mode reverse offload, API VHcall), ou programme principal sur VH et d\xe9port de noyaux sur VE (mode acc\xe9l\xe9rateur, API VEO, AVEO et VEDA). Se r\xe9f\xe9rer au document de formation \xe0 la prise en main de Bor\xe9ale, et aux pages suivantes :"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/sx-aurora/veda"},"https://github.com/sx-aurora/veda")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://sxauroratsubasa.sakura.ne.jp/documents/veos/en/veda/index.html"},"https://sxauroratsubasa.sakura.ne.jp/documents/veos/en/veda/index.html")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.nec.com/en/global/solutions/hpc/articles/tech26.html"},"https://www.nec.com/en/global/solutions/hpc/articles/tech26.html")))),(0,n.kt)("li",{parentName:"ul"},"Usage des VH",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"L'utilit\xe9 d'ex\xe9cution de versions CPU de code est naturellement pour la comparaison de r\xe9sultats num\xe9riques et de performance, avec des versions VE en d\xe9veloppement")))),(0,n.kt)("h2",{id:"architecture-mat\xe9rielle"},"Architecture mat\xe9rielle"),(0,n.kt)("p",null,"Le cluster Bor\xe9ale est compos\xe9, au niveau mat\xe9riel, de :"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"1 frontale d'acc\xe8s NEC, ayant:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"2x Intel Xeon Ice Lake 6338 32 c\u0153urs CPU @ 2.0 GHz"),(0,n.kt)("li",{parentName:"ul"},"512 Go (16x 32 Go) de RAM DDR4-3200 ECC"),(0,n.kt)("li",{parentName:"ul"},"1x carte NEC SX-Aurora TSUBASA 20B Vector Engine (8 c\u0153urs @ 1.6 GHz - 48 Go HBM2)"))),(0,n.kt)("li",{parentName:"ul"},"1 frontale d'acc\xe8s NEC, ayant:",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"2x Intel Xeon Cascade Lake 6226 12 c\u0153urs CPU @ 2.7 GHz"),(0,n.kt)("li",{parentName:"ul"},"192 Go (12x 16 Go) de RAM DDR4-2933"),(0,n.kt)("li",{parentName:"ul"},"ConnectX-6 EDR IB/HDR100"),(0,n.kt)("li",{parentName:"ul"},"2x cartes NEC SX-Aurora TSUBASA 10BE Vector Engine (8 c\u0153urs @ 1.4 GHz - 48 Go HBM2)"))),(0,n.kt)("li",{parentName:"ul"},"1 frontale de visualisation",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"2x Intel Xeon Ice Lake 6338 32 c\u0153urs CPU @ 2.0 GHz"),(0,n.kt)("li",{parentName:"ul"},"512 Go (16x 32 Go) de RAM DDR4-3200 ECC"),(0,n.kt)("li",{parentName:"ul"},"1x carte Nvidia Quadro RTX A5000 24 Go GDDR6 (8192 c\u0153urs CUDA)"))),(0,n.kt)("li",{parentName:"ul"},"9 serveurs NEC SX-Aurora TSUBASA compos\xe9s de chacun de :",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"2x Intel Xeon Ice Lake 6326 16 c\u0153urs @ 2.9 Ghz"),(0,n.kt)("li",{parentName:"ul"},"256 Go (16x 16 Go) de RAM DDR4-3200 ECC"),(0,n.kt)("li",{parentName:"ul"},"8x cartes vectorielles ",(0,n.kt)("a",{parentName:"li",href:"https://fr.nec.com/fr_FR/global/solutions/hpc/sx/"},"NEC SX-Aurora TSUBASA 20B")," (chacune de 8 c\u0153urs @ 1.6 GHz - 48 Go HBM2)",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"les communications directes entre cartes vectorielles se font soit en DMA (intra-n\u0153ud) soit via Infiniband en utilisant les biblioth\xe8que NEC MPI ayant un support complet MPI 3.1."))))),(0,n.kt)("li",{parentName:"ul"},"un stockage partag\xe9 de type IBM Spectrum Scale (GPFS) pour environ 500 To utile et une bande passante de 3.5 Go/s"),(0,n.kt)("li",{parentName:"ul"},"un r\xe9seau rapide faible-latence Nvidia Mellanox Infiniband HDR 200 Gbps")),(0,n.kt)("p",null,"Le cluster utilise le logiciel de soumission Slurm pour la gestion de jobs utilisateurs et le syst\xe8me d'exploitation Rocky Linux."),(0,n.kt)("p",null,"Les environnements logiciels sont \xe9galement adapt\xe9s au type des machines :"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"L'environnement de d\xe9veloppement vectoriel NEC"),(0,n.kt)("li",{parentName:"ul"},"L'environnement de d\xe9veloppement scalaire Intel OneAPI")))}m.isMDXComponent=!0}}]);